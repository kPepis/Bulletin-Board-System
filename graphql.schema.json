{
  "README": "This is a bare-bones schema generated by JS GraphQL. Replace it with your own schema file or load it from a url by editing graphql.config.json",
  "data": {
    "__schema": {
      "_queryType": "Query",
      "_mutationType": "Mutation",
      "_subscriptionType": "Subscription",
      "_directives": [
        {
          "name": "include",
          "description": "Directs the executor to include this field or fragment only when the `if` argument is true.",
          "locations": ["FIELD", "FRAGMENT_SPREAD", "INLINE_FRAGMENT"],
          "args": [
            {
              "name": "if",
              "description": "Included when true.",
              "type": "Boolean!"
            }
          ]
        },
        {
          "name": "skip",
          "description": "Directs the executor to skip this field or fragment when the `if` argument is true.",
          "locations": ["FIELD", "FRAGMENT_SPREAD", "INLINE_FRAGMENT"],
          "args": [
            {
              "name": "if",
              "description": "Included when true.",
              "type": "Boolean!"
            }
          ]
        },
        {
          "name": "deprecated",
          "description": "Marks an element of a GraphQL schema as no longer supported.",
          "locations": ["ENUM_VALUE", "FIELD_DEFINITION"],
          "args": [
            {
              "name": "reason",
              "description": "Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted in [Markdown](https://daringfireball.net/projects/markdown/).",
              "type": "String",
              "defaultValue": "No longer supported"
            }
          ]
        }
      ],
      "astNode": null,
      "_typeMap": {
        "Query": "Query",
        "UserWhereInput": "UserWhereInput",
        "ID": "ID",
        "String": "String",
        "PostWhereInput": "PostWhereInput",
        "DateTime": "DateTime",
        "BoardWhereInput": "BoardWhereInput",
        "UserOrderByInput": "UserOrderByInput",
        "Int": "Int",
        "User": "User",
        "Node": "Node",
        "PostOrderByInput": "PostOrderByInput",
        "Post": "Post",
        "Board": "Board",
        "BoardOrderByInput": "BoardOrderByInput",
        "UserWhereUniqueInput": "UserWhereUniqueInput",
        "BoardWhereUniqueInput": "BoardWhereUniqueInput",
        "PostWhereUniqueInput": "PostWhereUniqueInput",
        "UserConnection": "UserConnection",
        "PageInfo": "PageInfo",
        "Boolean": "Boolean",
        "UserEdge": "UserEdge",
        "AggregateUser": "AggregateUser",
        "BoardConnection": "BoardConnection",
        "BoardEdge": "BoardEdge",
        "AggregateBoard": "AggregateBoard",
        "PostConnection": "PostConnection",
        "PostEdge": "PostEdge",
        "AggregatePost": "AggregatePost",
        "Mutation": "Mutation",
        "UserCreateInput": "UserCreateInput",
        "PostCreateManyInput": "PostCreateManyInput",
        "PostCreateInput": "PostCreateInput",
        "BoardCreateOneWithoutPostsInput": "BoardCreateOneWithoutPostsInput",
        "BoardCreateWithoutPostsInput": "BoardCreateWithoutPostsInput",
        "BoardCreateInput": "BoardCreateInput",
        "PostCreateManyWithoutBoardInput": "PostCreateManyWithoutBoardInput",
        "PostCreateWithoutBoardInput": "PostCreateWithoutBoardInput",
        "UserUpdateInput": "UserUpdateInput",
        "PostUpdateManyInput": "PostUpdateManyInput",
        "PostUpdateWithWhereUniqueNestedInput": "PostUpdateWithWhereUniqueNestedInput",
        "PostUpdateDataInput": "PostUpdateDataInput",
        "BoardUpdateOneRequiredWithoutPostsInput": "BoardUpdateOneRequiredWithoutPostsInput",
        "BoardUpdateWithoutPostsDataInput": "BoardUpdateWithoutPostsDataInput",
        "BoardUpsertWithoutPostsInput": "BoardUpsertWithoutPostsInput",
        "PostUpdateManyWithWhereNestedInput": "PostUpdateManyWithWhereNestedInput",
        "PostScalarWhereInput": "PostScalarWhereInput",
        "PostUpdateManyDataInput": "PostUpdateManyDataInput",
        "PostUpsertWithWhereUniqueNestedInput": "PostUpsertWithWhereUniqueNestedInput",
        "BoardUpdateInput": "BoardUpdateInput",
        "PostUpdateManyWithoutBoardInput": "PostUpdateManyWithoutBoardInput",
        "PostUpdateWithWhereUniqueWithoutBoardInput": "PostUpdateWithWhereUniqueWithoutBoardInput",
        "PostUpdateWithoutBoardDataInput": "PostUpdateWithoutBoardDataInput",
        "PostUpsertWithWhereUniqueWithoutBoardInput": "PostUpsertWithWhereUniqueWithoutBoardInput",
        "PostUpdateInput": "PostUpdateInput",
        "UserUpdateManyMutationInput": "UserUpdateManyMutationInput",
        "BatchPayload": "BatchPayload",
        "Long": "Long",
        "BoardUpdateManyMutationInput": "BoardUpdateManyMutationInput",
        "PostUpdateManyMutationInput": "PostUpdateManyMutationInput",
        "Subscription": "Subscription",
        "UserSubscriptionWhereInput": "UserSubscriptionWhereInput",
        "MutationType": "MutationType",
        "UserSubscriptionPayload": "UserSubscriptionPayload",
        "UserPreviousValues": "UserPreviousValues",
        "BoardSubscriptionWhereInput": "BoardSubscriptionWhereInput",
        "BoardSubscriptionPayload": "BoardSubscriptionPayload",
        "BoardPreviousValues": "BoardPreviousValues",
        "PostSubscriptionWhereInput": "PostSubscriptionWhereInput",
        "PostSubscriptionPayload": "PostSubscriptionPayload",
        "PostPreviousValues": "PostPreviousValues",
        "__Schema": "__Schema",
        "__Type": "__Type",
        "__TypeKind": "__TypeKind",
        "__Field": "__Field",
        "__InputValue": "__InputValue",
        "__EnumValue": "__EnumValue",
        "__Directive": "__Directive",
        "__DirectiveLocation": "__DirectiveLocation"
      },
      "_implementations": {
        "Node": ["User", "Post", "Board"]
      }
    }
  }
}
