{"version":3,"file":"static/webpack/static/development/pages/_app.js.d5fa43420cb2464446da.hot-update.js","sources":["webpack:///./pages/_app.tsx"],"sourcesContent":["import { Layout, Menu } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { ApolloClient } from \"apollo-boost\";\nimport withRedux from \"next-redux-wrapper\";\nimport App, { Container, NextAppContext } from \"next/app\";\nimport Link from \"next/link\";\nimport React from \"react\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { Provider } from \"react-redux\";\nimport { Store } from \"redux\";\nimport io from \"socket.io-client\";\n\nimport withData from \"../lib/withData\";\nimport initStore from \"../lib/withReduxSaga\";\n\nconst { Sider, Content } = Layout;\n\ninterface IProps {\n  apollo: ApolloClient<any>;\n  store: Store;\n}\n\ninterface IState {\n  socket: SocketIOClient.Socket | null;\n}\n\nconsole.log(\"Front-end url\", process.env.FRONTEND_URL);\n\nclass MyApp extends App<IProps, IState> {\n  static async getInitialProps(context: NextAppContext) {\n    const { Component, ctx } = context;\n\n    const pageProps =\n      typeof (Component as any).getInitialProps === \"function\"\n        ? await (Component as any).getInitialProps(ctx)\n        : {};\n\n    // this exposes the query to the user\n    pageProps.query = ctx.query;\n    return { pageProps };\n  }\n\n  state = {\n    socket: io(),\n  };\n\n  render() {\n    const { Component, pageProps, apollo, store } = this.props;\n    return (\n      <Container>\n        <Provider store={store}>\n          <ApolloProvider client={apollo}>\n            <Layout hasSider={true}>\n              <Sider collapsible collapsedWidth={50} theme=\"dark\">\n                <div className=\"logo\" />\n                <Menu theme=\"dark\" mode=\"inline\">\n                  <Menu.Item>\n                    {pageProps.userName ? (\n                      <Link href=\"/me\">\n                        <a>My profile</a>\n                      </Link>\n                    ) : (\n                      <Link href=\"/login\">\n                        <a>Login</a>\n                      </Link>\n                    )}\n                  </Menu.Item>\n\n                  {!pageProps.userName ? (\n                    <Menu.Item>\n                      <Link href=\"/\">\n                        <a>Sign up</a>\n                      </Link>\n                    </Menu.Item>\n                  ) : (\n                    <Menu.Item>\n                      <Link href=\"/logout\">\n                        <a>Log out</a>\n                      </Link>\n                    </Menu.Item>\n                  )}\n\n                  <Menu.Item>\n                    <Link href=\"/boards\">\n                      <a>Boards</a>\n                    </Link>\n                  </Menu.Item>\n                </Menu>\n              </Sider>\n\n              <Layout>\n                <Content>\n                  <Component {...pageProps} socket={this.state.socket} />\n                </Content>\n              </Layout>\n            </Layout>\n          </ApolloProvider>\n        </Provider>\n      </Container>\n    );\n  }\n}\n\n// export default withRedux(initStore)(MyApp);\nexport default withRedux(initStore)(withData(MyApp));\n// export default withData(MyApp);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAAA;AAWA;AACA;AACA;;;;;;;;;;;;;;;;;;AAcA;AACA;AADA;AACA;;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAIA;AAAA;AAQA;AAAA;AAMA;AAAA;AAOA;AAAA;AASA;AAAA;AAQA;;;;;;AAvEA;;;;;;AACA;AACA;AAEA;;;;;;AACA;AACA;;;;;;;AAAA;AACA;;AAJA;AAKA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAZA;AACA;AACA;AA0EA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}